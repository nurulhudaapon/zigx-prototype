pub fn Page(allocator: zx.Allocator) zx.Component {
    return (
        <html lang="en-US">

        <head>
            <title>ZigX</title>
        </head>

        <body>
            <template shadowrootmode="open">
                <ul>
                    <li> <slot name="item-1"> Loading... </slot> </li>
                    <li> <slot name="item-2"> Loading... </slot> </li>
                    <li> <slot name="item-3"> Loading... </slot> </li>
                    <li> <slot name="item-4"> Loading... </slot> </li>
                </ul>
            </template>
            <span slot="item-1"> <AsyncScore /> </span>
            <span slot="item-2"> <AsyncScore /> </span>
            <span slot="item-3"> <AsyncScore /> </span>
            <span slot="item-4"> <AsyncScore /> </span>
        </body>

        </html>
    );
}

const std = @import("std");
const zx = @import("zx");

const ButtonProps = struct {
    title: []const u8 = "Click Me"
};

fn Button(allocator: zx.Allocator, props: ButtonProps) zx.Component {
    return (
        <button class="btn">{props.title}
            <span>
                ZigX
            </span>
        </button>
    );
}

fn AsyncScore(allocator: zx.Allocator) zx.Component {
    const rand = std.crypto.random;
    const ns = rand.intRangeAtMost(u64, 1, std.time.ns_per_s);
    std.Thread.sleep(ns);

    return (
            <span>
                Item
            </span>
    );
}